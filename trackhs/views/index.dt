- import app;
- void genSelect(ET)()
  - import std.traits;
  - foreach (immutable t; EnumMembers!ET)
    option(value="#{t.to!(OriginalType!ET)}")= t

doctype html
html
  head
    title trackhs
    meta(charset="utf-8")
  body
    h1 trackhs
    - if (authenticated)
      p User ID: #{userId}
      form(action="logout", method="POST")
        button(type="submit") Log out
      h2 Games
      table
        - foreach(g; games)
          tr
            td= g.ourClass
            td= g.opponentsClass
            td= g.result
            td= g.deckId
            td= g.first ? "first" : "second"
      h3 Record Game
      form#recordgame(onsubmit="recordgame_submit(event)")
        p My class
          select#ourclass
            - genSelect!(ITrackhs.Class);
        p Opponent's class
          select#opponentsclass
            - genSelect!(ITrackhs.Class);
        p Result
          select#result
            - genSelect!(ITrackhs.GameResult);
        p First
          input#first(type="checkbox")
        button(type="submit") Submit

    - else
      h2 Log in
      form(action="login", method="POST")
        p Username:
          input(type="text", name="username")
        p Password:
          input(type="password", name="password")
        button(type="submit") Log in

  script(src="api.js", type="text/javascript")
  script(type="text/javascript").
    var recordgame_submit = function(e) {
      req = {
        ourClass : Number(document.querySelector('select#ourclass').value),
        opponentsClass : Number(document.querySelector('select#opponentsclass').value),
        result : Number(document.querySelector('select#result').value),
        first : document.querySelector('input#first').checked
        };

      ITrackhs.postGame(req.ourClass, req.opponentsClass, req.result, req.first, 0);
    }
//- vim: set ft=jade:
